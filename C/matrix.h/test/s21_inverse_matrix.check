#test inverse_1
int res = s21_inverse_matrix(NULL, NULL);
ck_assert_int_eq(res, 1);

#test inverse_2
matrix_t A;
matrix_t B;
s21_create_matrix(10, 10, &A);
A.rows = 0;
int res = s21_inverse_matrix(&A, &B);
ck_assert_int_eq(res, 1);
s21_remove_matrix(&A);

#test inverse_3
matrix_t A;
matrix_t B;
s21_create_matrix(10, 9, &A);
int res = s21_inverse_matrix(&A, &B);
ck_assert_int_eq(res, 2);
s21_remove_matrix(&A);

#test inverse_4
matrix_t A;
matrix_t B;
matrix_t C;
s21_create_matrix(1, 1, &A);
s21_create_matrix(1, 1, &C);
A.matrix[0][0] = 42.12849;
C.matrix[0][0] = 1 / 42.12849;
int res = s21_inverse_matrix(&A, &B);
ck_assert_double_eq(s21_eq_matrix(&B, &C), 1);
ck_assert_int_eq(res, 0);
s21_remove_matrix(&A);
s21_remove_matrix(&B);
s21_remove_matrix(&C);

#test inverse_5
matrix_t A;
matrix_t B;
matrix_t C;
double A_nums[9] = {2, 5, 7, 6, 3, 4, 5, -2, -3};
double result_nums[9] = {1, -1, 1, -38, 41, -34, 27, -29, 24};
s21_create_matrix(3, 3, &A);
s21_create_matrix(3, 3, &C);
set_matrix(A_nums, &A);
set_matrix(result_nums, &C);
int res = s21_inverse_matrix(&A, &B);
ck_assert_double_eq(s21_eq_matrix(&B, &C), 1);
ck_assert_int_eq(res, 0);
s21_remove_matrix(&A);
s21_remove_matrix(&B);
s21_remove_matrix(&C);

#test inverse_6
matrix_t A;
matrix_t B;
double A_nums[25] = {1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13,
                     14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
s21_create_matrix(5, 5, &A);
set_matrix(A_nums, &A);
int res = s21_inverse_matrix(&A, &B);
ck_assert_int_eq(res, 2);
s21_remove_matrix(&A);
